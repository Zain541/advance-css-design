/*
COLORS:
Light green: #7ed56f
Light green: #55c57a
Light green: #28b485
*/
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box; /*border and padding are not added to the container */

}

body{
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7; /*it means that the line height 1.7 times bigger than the origin height. Line height means the height of text line*/
    color: #777;
    padding: 30px;
}

.header{
    height: 95vh; /*it means that the 95% of window height*/
    background-image:
    linear-gradient(
        to right bottom,
        rgba(126, 213, 111, 0.8),
        rgba(40, 180, 131, 0.8)
    ),
    url(../img/hero.jpg);
    background-size: cover;
    background-position: top; /*background image will be cropped except top position*/
    clip-path: polygon(0 0, 100% 0, 100% 75%, 0 100%); /* get more designs here https://bennettfeely.com/clippy/ */
    position: relative;
}

.logo-box{
    position: absolute;
    top: 40px; /* it calculates the position from its parent element which has its position to relative. Same goes with left attribute*/
    left: 40px;
}

.logo{
    height: 35px;
}
.text-box{
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%); /*The translate() method moves an element from its current position (according to the parameters given for the X-axis and the Y-axis).*/
    text-align: center;
}

.heading-primary{
    color: #fff;
    text-transform: uppercase;
    backface-visibility: hidden !important;
    margin-bottom: 60px;
}
.heading-primary-main{
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out; /* Animations start slowly then ends up fastly */

    /*
    animation-iteration-count: 3;  number of times the animation would run
    animation-delay: 3s; animation would run after 3 seconds
    */
}
.heading-primary-sub{
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;
    animation: moveInRight 1s ease-out; /*Combining all three in single command*/
}
@keyframes moveInLeft {
    0%{
        opacity: 0;
        transform: translateX(-100px); /*rotate(180deg) we can also rotate the element */
    }

    80%{
        transform: translateX(10px);
    }

    100%{
        opacity: 1;
        transform: translate(0);

    }
}

@keyframes moveInRight {
    0%{
        opacity: 0;
        transform: translateX(100px);
    }

    80%{
        transform: translateX(-10px);
    }

    100%{
        opacity: 1;
        transform: translate(0);

    }
}
@keyframes moveInBottom {
    0%{
        opacity: 0;
        transform: translateY(30px);
    }

    100%{
        opacity: 1;
        transform: translate(0);

    }
}

.btn:link,
.btn:visited{
    text-transform: uppercase;
    text-decoration: none;
    padding: 15px 40px; /* If there are two values then the first on would be top & bottom and the second would be left % right. If there are four values then 1:top, 2:right, 3:bottom and 4:left. Clock wise */
    display: inline-block;
    border-radius: 100px;
    transition: all 0.2s; /*The transition effect will start when the specified CSS property changes value.*/
    position: relative;
}

.btn:hover{
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);    
}

.btn:active{
    transform: translateY(-1px);
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);    
}

.btn-white{
    background-color: #fff;
    color: #777;

}

.btn::after{
    content:"";
    display:inline-block;
    width: 100%;
    height:100%;
    position: absolute;
    position: absolute;
    top: 0px;
    left: 0px;
    z-index: -1;
    border-radius: 100px;
    transition: all 0.4s;
}

.btn-white::after{
    background-color:#fff;
}
.btn:hover::after{
    transform: scaleX(1.4) scaleY(1.6); /* When it hovers in then the after part actually grows upto 1.5% but due to the 0 opacity it seems that it fades out which in actual case executing opacity to 0. When it hovers out the same process runs with the backward effect*/
    opacity: 0; 
}
.btn-animated{
    animation: moveInBottom 0.5s ease-out .75s; /* animation name, animation duration, animation timing function and animation delay*/
    animation-fill-mode: backwards;
}